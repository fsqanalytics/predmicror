[{"path":"/articles/growth_models.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Fitting growth models using predmicror","text":"conduct statistical analyses, need import data R working environment. predmicror package incorporated datasets, can use data() function load example datasets working environment. Thus, start fitting full growth model experimental data, thus load growthfull.Rda dataset part predmicror package. Now dataset available R environment, can print entire dataset typing growthfull take look first five lines using head(). data outer predmicrorpackage, usually .csv format, flat text files use read.csv() function import CSV file R environment. load dataset, good practice assure dataset located working directory, thus import CSV file called growthfull.csv R environment next code section. dataset R environment, thus can start checking data proprieties. example, str() function gives information considering structure variables (numeric, integer, etc.), names() function show us variables names.","code":"data(growthfull) growthfull ##    Time    logN     lnN ## 1     0 -0.1046 -0.2006 ## 2     2  0.0792  0.1922 ## 3     4  0.1212  0.1587 ## 4     6  0.7344  1.5290 ## 5     8  2.5531  5.9421 ## 6    10  3.8358  8.8024 ## 7    12  5.8476 13.3749 ## 8    14  7.1938 16.1457 ## 9    16  8.7521 20.2299 ## 10   18  9.1119 20.8575 ## 11   20  9.3162 21.6272 ## 12   22  9.2224 20.5114 ## 13   24  9.3019 21.3943 head(growthfull) ##   Time    logN     lnN ## 1    0 -0.1046 -0.2006 ## 2    2  0.0792  0.1922 ## 3    4  0.1212  0.1587 ## 4    6  0.7344  1.5290 ## 5    8  2.5531  5.9421 ## 6   10  3.8358  8.8024 growthfull <- read.csv(\"growthfull.csv\", sep=\";\", header=TRUE) str(growthfull) ## 'data.frame':    13 obs. of  3 variables: ##  $ Time: int  0 2 4 6 8 10 12 14 16 18 ... ##  $ logN: num  -0.1046 0.0792 0.1212 0.7344 2.5531 ... ##  $ lnN : num  -0.201 0.192 0.159 1.529 5.942 ... names(growthfull) ## [1] \"Time\" \"logN\" \"lnN\""},{"path":"/articles/growth_models.html","id":"plotting-data","dir":"Articles","previous_headings":"","what":"Plotting data","title":"Fitting growth models using predmicror","text":"check relationship Time lnN, might use function plot(), can check data visual inspection.  save plot .png object, can use png() function.","code":"plot(lnN ~ Time, data=growthfull,      xlab=\"Time (hours)\", ylab=\"ln N\",      xlim=c(0,20), ylim=c(0,22)) png(\"growthfull.png\") plot(lnN ~ Time, data=growthfull,     xlab=\"Time (hours)\", ylab=\"ln N\",     xlim=c(0,20), ylim=c(0,22)) dev.off()"},{"path":"/articles/growth_models.html","id":"fitting-the-huang-full-model","dir":"Articles","previous_headings":"","what":"Fitting the Huang full model","title":"Fitting growth models using predmicror","text":"start fitting Huang full growth model experimental data stored growthfull dataset. Huang full growth model function (Huang()) predmicror package function fitted data non-linear least squares function gsl_nls() implemented gslnls package. First, need good guess starting values fitting procedure: Now can fit model data growthfull: Next, can check model parameters: predict() function gslnls package can used produce confidence prediction intervals prediction lnN given Time. Plot observed data fitted values confidence interval  Plot observed data fitted values prediction interval","code":"start_values=list(Y0=0.02, Ymax=22, MUmax=1.6, lag=5) fit <- gsl_nls(lnN ~ HuangFM(Time, Y0, Ymax, MUmax, lag),              data=growthfull,              start=start_values) summary(fit) ##  ## Formula: lnN ~ HuangFM(Time, Y0, Ymax, MUmax, lag) ##  ## Parameters: ##       Estimate Std. Error t value Pr(>|t|)     ## Y0     0.04562    0.25768   0.177    0.863     ## Ymax  21.13232    0.22393  94.372 8.54e-15 *** ## MUmax  1.85942    0.06076  30.601 2.08e-10 *** ## lag    5.07987    0.25000  20.320 7.89e-09 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.4444 on 9 degrees of freedom ##  ## Number of iterations to convergence: 6  ## Achieved convergence tolerance: 3.377e-12 coef(fit) ##         Y0       Ymax      MUmax        lag  ##  0.0456246 21.1323152  1.8594243  5.0798660 newTimes <- data.frame(Time=seq(0, 24, by=0.1)) fits <- data.frame(predict(fit, newdata = newTimes, interval=\"confidence\", level=0.95)) str(fits) ## 'data.frame':    241 obs. of  3 variables: ##  $ fit: num  0.0456 0.0456 0.0456 0.0456 0.0456 ... ##  $ lwr: num  -0.0986 -0.0986 -0.0986 -0.0986 -0.0986 ... ##  $ upr: num  0.19 0.19 0.19 0.19 0.19 ... preds <- data.frame(predict(fit, newdata = newTimes, interval=\"prediction\", level=0.95)) str(preds) ## 'data.frame':    241 obs. of  3 variables: ##  $ fit: num  0.0456 0.0456 0.0456 0.0456 0.0456 ... ##  $ lwr: num  -0.97 -0.97 -0.97 -0.97 -0.97 ... ##  $ upr: num  1.06 1.06 1.06 1.06 1.06 ... plot(newTimes$Time, fits$fit, type=\"l\", col=\"blue\",      xlab=\"time (days)\", ylab=\"logN\",      main=\"Huang full model\") points(growthfull$Time, growthfull$lnN) lines(newTimes$Time, fits$upr, col=\"red\") lines(newTimes$Time, fits$lwr, col=\"red\") plot(newTimes$Time, fits$fit, type=\"l\", col=\"blue\",      xlab=\"time (days)\", ylab=\"logN\", ylim=c(-1,22), xlim=c(0,24),      main=\"Huang full model\") points(growthfull$Time, growthfull$lnN) lines(newTimes$Time, preds$upr, col=\"red\") lines(newTimes$Time, preds$lwr, col=\"red\")"},{"path":"/articles/growth_models.html","id":"fitting-the-fang-no-lag-model","dir":"Articles","previous_headings":"","what":"Fitting the Fang no lag model","title":"Fitting growth models using predmicror","text":"First, want load data set: Let’s start Fang model, fit model experimental data using nonlinear least squares function gsl_nls() implemented gsl_nls R package: Next, can check model parameters: Next, can extract model parameters apply model new data Plot observed data fitted values confidence interval  Plot observed data fitted values prediction interval","code":"data(growthnolag) growthnolag ##    Time   logN     lnN ## 1     0 0.7344  1.5290 ## 2     2 2.5531  5.9421 ## 3     4 3.8358  8.8024 ## 4     6 5.8476 13.3749 ## 5     8 7.1938 16.1457 ## 6    10 8.7521 20.2299 ## 7    12 9.1119 20.8575 ## 8    14 9.3162 21.6272 ## 9    16 9.2224 20.5114 ## 10   18 9.3019 21.3943 start_values=list(Y0=0.01, Ymax=22, MUmax=1.6) fit <- gsl_nls(lnN ~ FangNLM(Time, Y0, Ymax, MUmax),              data=growthnolag,              start=start_values) fit ## Nonlinear regression model ##   model: lnN ~ FangNLM(Time, Y0, Ymax, MUmax) ##    data: growthnolag ##     Y0   Ymax  MUmax  ##  1.758 21.132  1.859  ##  residual sum-of-squares: 1.678 ##  ## Algorithm: multifit/levenberg-marquardt, (scaling: more, solver: qr) ##  ## Number of iterations to convergence: 5  ## Achieved convergence tolerance: 1.414e-11 summary(fit) ##  ## Formula: lnN ~ FangNLM(Time, Y0, Ymax, MUmax) ##  ## Parameters: ##       Estimate Std. Error t value Pr(>|t|)     ## Y0     1.75827    0.36368   4.835  0.00189 **  ## Ymax  21.13234    0.24673  85.650 7.79e-12 *** ## MUmax  1.85922    0.06619  28.091 1.86e-08 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.4896 on 7 degrees of freedom ##  ## Number of iterations to convergence: 5  ## Achieved convergence tolerance: 1.414e-11 newTimes <- data.frame(Time=seq(0, 18, by=0.1)) fits <- data.frame(predict(fit, newdata = newTimes, interval=\"confidence\", level=0.95)) str(fits) ## 'data.frame':    181 obs. of  3 variables: ##  $ fit: num  1.76 1.94 2.13 2.32 2.5 ... ##  $ lwr: num  1.53 1.72 1.91 2.1 2.29 ... ##  $ upr: num  1.99 2.17 2.35 2.53 2.72 ... preds <- data.frame(predict(fit, newdata = newTimes, interval=\"prediction\", level=0.95)) plot(newTimes$Time, fits$fit, type=\"l\", col=\"blue\",      xlab=\"time (days)\", ylab=\"logN\",      main=\"Fang no lag model\") points(growthnolag$Time, growthnolag$lnN) lines(newTimes$Time, fits$upr, col=\"red\") lines(newTimes$Time, fits$lwr, col=\"red\") plot(newTimes$Time, fits$fit, type=\"l\", col=\"blue\",      xlab=\"time (days)\", ylab=\"logN\", ylim=c(-1,22), xlim=c(0,18),      main=\"Fang no lag model\") points(growthnolag$Time, growthnolag$lnN) lines(newTimes$Time, preds$upr, col=\"red\") lines(newTimes$Time, preds$lwr, col=\"red\")"},{"path":"/articles/growth_models.html","id":"fitting-the-buchanan-reduced-model","dir":"Articles","previous_headings":"","what":"Fitting the Buchanan reduced model","title":"Fitting growth models using predmicror","text":"First, want load data set: Let’s start Buchanan model, fit model experimental data using nonlinear least squares function gsl_nls() implemented gslnls R package: Next, can check model parameters: Next, can extract model parameters apply model new data Plot observed data fitted values confidence interval  Plot observed data fitted values prediction interval","code":"data(growthred) growthred ##   Time    logN     lnN ## 1    0 -0.1046 -0.2006 ## 2    2  0.0792  0.1922 ## 3    4  0.1212  0.1587 ## 4    6  0.7344  1.5290 ## 5    8  2.5531  5.9421 ## 6   10  3.8358  8.8024 ## 7   12  5.8476 13.3749 ## 8   14  7.1938 16.1457 ## 9   16  8.7521 20.2299 start_values=list(Y0=0.01, MUmax=1.6, lag=5) fit <- gsl_nls(lnN ~ BuchananRM(Time, Y0, MUmax, lag),              data=growthred,              start=start_values) summary(fit) ##  ## Formula: lnN ~ BuchananRM(Time, Y0, MUmax, lag) ##  ## Parameters: ##       Estimate Std. Error t value Pr(>|t|)     ## Y0     0.05010    0.22810    0.22    0.833     ## MUmax  1.83840    0.04722   38.93 1.92e-08 *** ## lag    5.04160    0.21567   23.38 4.02e-07 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.3951 on 6 degrees of freedom ##  ## Number of iterations to convergence: 3  ## Achieved convergence tolerance: 5.878e-11 newTimes <- data.frame(Time=seq(0, 16, by=0.1)) fits <- data.frame(predict(fit, newdata = newTimes, interval=\"confidence\", level=0.95)) str(fits) ## 'data.frame':    161 obs. of  3 variables: ##  $ fit: num  0.0501 0.0501 0.0501 0.0501 0.0501 ... ##  $ lwr: num  -0.0853 -0.0853 -0.0853 -0.0853 -0.0853 ... ##  $ upr: num  0.185 0.185 0.185 0.185 0.185 ... preds <- data.frame(predict(fit, newdata = newTimes, interval=\"prediction\", level=0.95)) plot(newTimes$Time, fits$fit, type=\"l\", col=\"blue\",      xlab=\"time (days)\", ylab=\"logN\",      main=\"Buchanan reduced model\") points(growthred$Time, growthred$lnN) lines(newTimes$Time, fits$upr, col=\"red\") lines(newTimes$Time, fits$lwr, col=\"red\") plot(newTimes$Time, fits$fit, type=\"l\", col=\"blue\",      xlab=\"time (days)\", ylab=\"logN\", ylim=c(-1,22), xlim=c(0,16),      main=\"Buchanan reduced model\") points(growthred$Time, growthred$lnN) lines(newTimes$Time, preds$upr, col=\"red\") lines(newTimes$Time, preds$lwr, col=\"red\")"},{"path":"/articles/predmicror.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to predmicror","text":"Predictive Microbiology deals development accurate , time, versatile mathematical models, able describe microbial evolution food products function environmental conditions, assumed measurable. predmicror (https://github.com/fsqanalytics/predmicror/) package fitting widely used predictive microbiology models.","code":""},{"path":"/articles/predmicror.html","id":"primary-growth-models","dir":"Articles","previous_headings":"","what":"Primary growth models","title":"Introduction to predmicror","text":"actual version includes primary growth models describe microbial concentration function time constant environmental conditions. model inputs : \\(t\\): time, assuming time zero beginning experiment; \\(Y_{(t)}\\): natural logarithm microbial concentration \\(X_{(t)}\\) measured time \\(t\\). Users make sure microbial concentration input entered natural logarithm, \\(Y_{(t)} = ln(X_{(t)})\\). number model parameters dependent upon completeness microbial growth curve. following parameters can estimated using web application: \\(Y_0\\): natural logarithm initial microbial concentration \\(t=0\\); \\(\\mu_{max}\\): maximum specific growth rate given time \\(units^{-1}\\); \\(\\lambda\\): duration lag phase time units; \\(Y_{max}\\): natural logarithm maximum concentration reached microorganism. full model adjusted complete microbial curve, lag phase, exponential phase stationary phase can identified. predmicror can also fit reduced models. -stationary phase model adjusted experimental microbial curve presents lag phase exponential phase, whereas -lag phase model adjusted experimental curve composed exponential phase stationary phase. experimental growth curve presents exponential phase analysed using predmicror functions.","code":""},{"path":"/articles/predmicror.html","id":"full-growth-models","dir":"Articles","previous_headings":"Primary growth models","what":"Full growth models","title":"Introduction to predmicror","text":"predmicror can adjust four nonlinear models complete microbial growth curves: Huang model, Rosso model, Baranyi & Roberts model Zwietering reparameterised Gompertz model.","code":""},{"path":"/articles/predmicror.html","id":"huang-model","dir":"Articles","previous_headings":"Primary growth models > Full growth models","what":"Huang model","title":"Introduction to predmicror","text":"Huang growth model developed Huang (2008). \\[Y_{(t)} = Y_0 + Y_{max} -log \\left( e^{Y_0} + (e^{Y_{max}} - e^{Y_0}) \\times e^{-\\mu_{max} \\times B_{(t)}} \\right)\\] \\[B_{(t)} = t + \\frac{1}{\\alpha} \\times log \\left( \\frac{1 + e^{-\\alpha \\times (t-\\lambda)} }{1 + e^{\\alpha\\times \\lambda}} \\right)\\] evaluating multiple growth data sets, Huang (2013) recommended fixing parameter \\(\\alpha\\) 4.0, thus predmicror considers \\(\\alpha=4.0\\).","code":""},{"path":"/articles/predmicror.html","id":"rosso-model","dir":"Articles","previous_headings":"Primary growth models > Full growth models","what":"Rosso model","title":"Introduction to predmicror","text":"Rosso growth model simple two-phase model proposed Rosso et al. (1996). \\[ Y_{(t)} = \\begin{cases} Y_0                                                                                                  & \\text{t $\\leq$ $\\lambda$}\\\\ Y_{max}-log \\left[1 +\\left( \\frac{e^{Y_{max}}}{e^{Y_0}}-1 \\right) e^{-\\mu_{max} (t-\\lambda)} \\right] & \\text{t > $\\lambda$} \\end{cases} \\]","code":""},{"path":"/articles/predmicror.html","id":"baranyi-roberts-model","dir":"Articles","previous_headings":"Primary growth models > Full growth models","what":"Baranyi & Roberts model","title":"Introduction to predmicror","text":"original Baranyi & Roberts model attributes lag phase need synthesise unknown substrate q critical growth, whose initial value \\(q_0\\) measure initial physiological state microbial cells (Baranyi & Roberts (1994)). predmicror implements Baranyi & Roberts model basis transformation \\(h_0 = \\mu_{max} \\times \\lambda\\), order estimate \\(\\lambda\\). Thus, model parameterisation used : \\[Y_{(t)} = Y_0 + \\mu_{max} \\times A_{(t)} - \\frac{1}{m} \\times log \\left[ 1 + \\frac{exp(m \\times \\mu_{max}  \\times A_{(t)})-1}{exp(m \\times (Y_{max}-Y_0)) } \\right]\\] \\[A_{(t)} = t + \\frac{ log \\left[ exp(-\\mu_{max} \\times t) + exp(-\\mu_{max} \\times \\lambda) - exp(-\\mu_{max} \\times t-\\mu_{max} \\times \\lambda) \\right] }{\\mu_{max}}\\] times, parameter m, characterises curvature stationary phase assumed 1.0. predmicror simplifies model assuming \\(m=1.0\\).","code":""},{"path":"/articles/predmicror.html","id":"zwietering-reparameterised-gompertz-model","dir":"Articles","previous_headings":"Primary growth models > Full growth models","what":"Zwietering reparameterised Gompertz model","title":"Introduction to predmicror","text":"predmicror adjusts Gompertz model, reparameterised Zwietering et al. (1990) modified Gompertz model. \\[Y_{(t)} = Y_0 + (Y_{max} - Y_0) \\times exp \\left[-exp \\left( \\frac{\\mu_{max}\\times (\\lambda -t)}{Y_{max}-Y_0} + 1 \\right) \\right]\\]","code":""},{"path":"/articles/predmicror.html","id":"no-stationary-phase-growth-models","dir":"Articles","previous_headings":"Primary growth models","what":"No stationary phase growth models","title":"Introduction to predmicror","text":"predmicror can adjust three nonlinear models microbial growth curves without stationary phase: reduced Huang model, reduced Baranyi & Roberts model two-phase linear growth model.","code":""},{"path":"/articles/predmicror.html","id":"huang-model-1","dir":"Articles","previous_headings":"Primary growth models > No stationary phase growth models","what":"Huang model","title":"Introduction to predmicror","text":"model special case complete Huang model, suitable experimental growth curves reach stationary phases. \\[Y_{(t)} = Y_0 + \\mu_{max} \\times \\left[ t + 0.25 \\times log \\left( \\frac{1 + e^{-4\\times(t-\\lambda)}}{1 + e^{4\\times\\lambda}} \\right) \\right]\\]","code":""},{"path":"/articles/predmicror.html","id":"baranyi-roberts-model-1","dir":"Articles","previous_headings":"Primary growth models > No stationary phase growth models","what":"Baranyi & Roberts model","title":"Introduction to predmicror","text":"special case full Baranyi & Roberts model briefly presented . \\[Y_{(t)} = Y_0 + \\mu_{max} \\times t + log \\left[exp(-\\mu_{max} \\times t) + exp(-\\mu_{max} \\times \\lambda) - exp(-\\mu_{max} \\times t-\\mu_{max} \\times \\lambda) \\right]\\]","code":""},{"path":"/articles/predmicror.html","id":"two-phase-linear-model","dir":"Articles","previous_headings":"Primary growth models > No stationary phase growth models","what":"Two-phase linear model","title":"Introduction to predmicror","text":"model reduced model three-phase linear growth model proposed Buchanan et al. (1997). \\[ Y_{(t)} = \\begin{cases} Y_0,                                  & \\text{t $\\leq$ $\\lambda$} \\\\ Y_0 + \\mu_{max} \\times (t - \\lambda), & \\text{t > $\\lambda$} \\end{cases} \\]","code":""},{"path":"/articles/predmicror.html","id":"no-lag-phase-growth-models","dir":"Articles","previous_headings":"Primary growth models","what":"No lag phase growth models","title":"Introduction to predmicror","text":"predmicror can adjust two nonlinear models microbial growth curves show lag phase: Richards model Fang model.","code":""},{"path":"/articles/predmicror.html","id":"richards-model","dir":"Articles","previous_headings":"Primary growth models > No lag phase growth models","what":"Richards model","title":"Introduction to predmicror","text":"\\[Y_{(t)} = Y_0 + \\mu_{max} \\times t - \\frac{1}{m} \\times log( 1 + \\frac{exp(m \\times \\mu_{max} \\times t) - 1}{exp(m \\times(Y_{max}-Y_0))}\\]","code":""},{"path":"/articles/predmicror.html","id":"fang-model","dir":"Articles","previous_headings":"Primary growth models > No lag phase growth models","what":"Fang model","title":"Introduction to predmicror","text":"Fang et al. (2012) Fang et al. (2013) integrated logistic growth model, producing continuous model particularly suitable growth curves without lag phase. \\[Y_{(t)} = Y_0 + Y_{max} - log \\left[ e^{Y_0} + \\left( e^{Y_{max}} - e^{Y_0} \\right) \\times e^{-\\mu_{max} \\times t} \\right]\\]","code":""},{"path":"/articles/predmicror.html","id":"the-cardinal-parameter-model","dir":"Articles","previous_headings":"","what":"The cardinal parameter model","title":"Introduction to predmicror","text":"Predictive Microbiology deals development accurate versatile mathematical models, able describe evolution microorganisms food products function environmental conditions, assumed measurable. Although classification schemes predictive microbiology models, traditionally classified primary secondary models. predmicror can used fit cardinal parameter models, secondary models describe growth rate microorganisms function extrinsic /intrinsic factors. models estimate optimum growth rate, minimum, optimum maximum values extrinsic intrinsic factors (e.g. temperature, pH, water activity) characterise growth given microbial strain. general cardinal parameter model used describe predict effect different environmental factors growth rate microorganism based modular approach called gamma concept (Zwietering et al., 1991), described , \\[ \\mu _{max}=\\mu _{opt}\\times \\gamma \\left(T \\right)\\times \\gamma \\left(pH\\right)\\times \\gamma \\left(aw\\right)\\times \\gamma (Inh) \\] : \\(\\mu _{max}\\): maximum growth rate (\\(h^{-1}\\) \\(day^{-1}\\)) studied bacterial strain \\(\\mu _{opt}\\): optimum growth rate (\\(h^{-1}\\) \\(day^{-1}\\)) studied bacterial strain \\(\\gamma \\left(T\\right),\\gamma \\left(pH\\right),\\gamma \\left(aw\\right),\\gamma (Inh)\\): dimensionless functions describing relative effects temperature (T), pH, water activity (aw) different measurable inhibitors (Inh) like undissociated organic acids \\(CO_2\\). functions \\(\\gamma \\left(T\\right),\\gamma \\left(pH\\right),\\gamma \\left(aw\\right),\\gamma (inh)\\) range 0 1, \\(\\gamma =0\\) growth fully inhibited \\(\\gamma =1\\) growth inhibited factor.","code":""},{"path":"/articles/predmicror.html","id":"cardinal-parameters","dir":"Articles","previous_headings":"The cardinal parameter model","what":"Cardinal Parameters","title":"Introduction to predmicror","text":"Many \\(\\gamma\\)-type functions proposed temperature, pH, aw lactic acid. predmicror adjusts cardinal parameter model using general equation \\(\\gamma\\) proposed Rosso et al. (1995). \\[ \\gamma (X)_n=\\left\\{\\begin{matrix} 0, \\qquad X \\leq X_{min} \\\\ \\frac{(X-X_{max})\\times (X-X_{min})^n}{(X_{opt}-X_{min})^{n-1}\\times \\left[\\begin{matrix}\\left(X_{opt}-X_{min}\\right)\\times \\left(X-X_{opt}\\right)-\\left(X_{opt}-X_{max}\\right)\\times \\\\ \\left(\\left(n-1\\right)\\times X_{opt}+X_{min}-n \\times X\\right)\\end{matrix}\\right]}, \\qquad X_{min}<X<X_{max} \\\\ 0, \\qquad X{\\geq}X_{max}\\end{matrix}\\right. \\] \\(X\\): intrinsic extrinsic factor study; temperature, pH aw \\(X_{min}\\): value factor growth occurs \\(X_{max}\\): value factor growth occurs \\(X_{opt}\\): value bacterial growth optimum \\(n\\): shape parameter ( \\(n=2\\) temperature water activity; \\(n=1\\) pH). \\(X_{min}\\), \\(X_{max}\\) \\(X_{opt}\\) known cardinal parameters, estimated fitting cardinal parameter model growth data experiments carried broth. precisely, \\(T_{min}\\), \\(T_{max}\\) \\(T_{opt}\\) determined \\(\\gamma \\left(T\\right)\\); \\(pH_{min}\\), \\(pH_{max}\\) \\(pH_{opt}\\) determined \\(\\gamma \\left(pH\\right)\\); \\(aw_{min}\\), \\(aw_{max}\\) \\(aw_{opt}\\) determined \\(\\gamma \\left(aw\\right)\\). Often, adjusting cardinal parameter model aw, \\(aw_{max}\\) set one, effect maximum value water activity measurement.","code":""},{"path":[]},{"path":"/articles/predmicror.html","id":"cardinal-parameter-model-for-temperature","dir":"Articles","previous_headings":"Cardinal parameter models available in predmicror","what":"Cardinal parameter model for temperature","title":"Introduction to predmicror","text":"predimicror adjusts Cardinal Temperature Model Inflection (CTMI) (Rosso1993?) determine optimum growth rate ( \\(\\mu_{opt}\\)) cardinal parameters \\(T_{min}\\), \\(T_{max}\\) \\(T_{opt}\\). \\[ \\sqrt{\\mu _{max}}=\\sqrt{\\mu _{opt}\\times \\gamma \\left(T\\right)} + \\varepsilon \\] \\[ \\gamma (T)=\\left\\{\\begin{matrix} 0, \\qquad T \\leq T_{min} \\\\ \\frac{(T-T_{max}) \\times (T-T_{min})^2}{\\left(T_{opt}-T_{min}\\right)\\times\\left[\\begin{matrix}\\left(T_{opt}-T_{min}\\right)\\times \\left(T-T_{opt}\\right)-\\left(T_{opt}-T_{max}\\right) \\times\\\\ \\left(T_{opt}+T_{min}-2T\\right)\\end{matrix}\\right]}, \\qquad T_{min} < T < T_{max}\\\\ 0, \\qquad T \\geq T_{max}\\end{matrix}\\right. \\] fit model growth data, response variable, maximum growth rate ( \\(\\mu _{max}\\)), square-root transformed reduce heterocedasticity. residuals represented \\(\\varepsilon\\), assumed follow normal distribution mean zero variance \\(\\sigma^2\\).","code":""},{"path":"/articles/predmicror.html","id":"cardinal-parameter-model-for-ph","dir":"Articles","previous_headings":"Cardinal parameter models available in predmicror","what":"Cardinal parameter model for pH","title":"Introduction to predmicror","text":"determine optimum growth rate (\\(\\mu_{opt}\\)) cardinal parameters \\(pH_{min}\\), \\(pH_{max}\\) \\(pH_{opt}\\), predmicror adjusts cardinal model pH proposed (Lemarc2002?). \\[ \\sqrt{\\mu _{max}}=\\sqrt{\\mu _{opt}.\\gamma \\left(pH\\right)}+\\varepsilon \\] \\[ \\gamma (pH)=\\left\\{\\begin{matrix}0,\\qquad pH{\\leq}pH_{min}\\\\\\frac{(pH-pH_{max}){\\times}\\left(pH-pH_{min}\\right)}{\\left[\\left(pH_{opt}-pH_{min}\\right).\\left(pH-pH_{opt}\\right)-\\left(pH_{opt}-pH_{max}\\right).\\left(pH_{min}-pH\\right)\\right]},\\qquad pH_{min}<pH<pH_{max}\\\\0,\\qquad pH{\\geq}pH_{max}\\end{matrix}\\right. \\]","code":""},{"path":"/articles/predmicror.html","id":"cardinal-parameter-model-for-aw","dir":"Articles","previous_headings":"Cardinal parameter models available in predmicror > Cardinal parameter model for pH","what":"Cardinal parameter model for Aw","title":"Introduction to predmicror","text":"predmicror adjusts cardinal model water activity (Rosso1993?) extract optimum growth rate (\\(\\mu_{opt}\\)) cardinal parameters \\(aw_{min}\\) \\(aw_{opt}\\). \\[ \\sqrt{\\mu _{max}}=\\sqrt{\\mu _{opt} \\times \\gamma \\left(aw\\right)} + \\varepsilon \\] \\[ \\gamma (aw)=\\left\\{\\begin{matrix} 0, \\qquad aw \\leq aw_{min} \\\\ \\frac{(aw-1.0)\\times(aw-aw_{min})^2}{\\left(aw_{opt}-aw_{min}\\right)\\times\\left[\\begin{matrix}\\left(aw_{opt}-aw_{min}\\right){\\times}\\left(aw-aw_{opt}\\right)-\\left(aw_{opt}-1.0\\right)\\times \\\\ \\left(aw_{opt}+aw_{min}-2aw\\right)\\end{matrix}\\right]},  \\qquad aw_{min}<aw<1.0 \\\\ 0, \\qquad aw \\geq 1.0 \\end{matrix} \\right. \\] fit model growth data, response variable, maximum growth rate ( \\(\\mu_{max}\\)), square-root transformed reduce heterocedasticity. residuals represented \\(\\varepsilon\\), assumed follow normal distribution mean zero variance \\(\\sigma^2\\).","code":""},{"path":"/articles/predmicror.html","id":"cardinal-parameter-model-for-inhibitory-substance","dir":"Articles","previous_headings":"Cardinal parameter models available in predmicror > Cardinal parameter model for pH","what":"Cardinal parameter model for inhibitory substance","title":"Introduction to predmicror","text":"inhibitors (Inh) including undissociated organic acids, \\(CO\\) others, cardinal parameter model proposed (Lemarc2002?))(Coroller2005?) can fitter predmicror. \\[ \\sqrt{\\mu_{max}}=\\sqrt{\\mu_{opt} \\times \\gamma \\left(inh\\right)}+\\varepsilon \\] \\[ \\gamma \\left(Inh\\right)=1-\\left(\\frac{Inh}{MIC}\\right)^\\alpha \\] Inh: concentration inhibiting substance compound (e.g. undissociated organic acid (mM), CO (%) MIC: Minimum Inhibitory Concentration (mM %, accordingly) \\(\\alpha\\): shape parameter curve (\\(\\alpha=1\\) shape linear; \\(\\alpha>1\\) shape downward concave; \\(\\alpha<1\\) shape upward concave). fit model growth data, response variable, maximum growth rate ( \\(\\mu_{max}\\)), square-root transformed reduce heterocedasticity. residuals represented \\(\\varepsilon\\), assumed follow normal distribution mean zero variance \\(\\sigma^2\\). model parameters MIC \\(\\alpha\\).","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vasco Cadavez. Author, maintainer. Ursula Gonzales-Barron. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cadavez V, Gonzales-Barron U (2022). predmicror: Fitting predictive microbiology models r. R package version 1.0.1, https://github.com/fsqanalytics/predmicror/.","code":"@Manual{,   title = {predmicror: Fitting predictive microbiology models in r},   author = {Vasco Cadavez and Ursula Gonzales-Barron},   year = {2022},   note = {R package version 1.0.1},   url = {https://github.com/fsqanalytics/predmicror/}, }"},{"path":"/index.html","id":"predmicror","dir":"","previous_headings":"","what":"predmicror: Fitting predictive microbiology models in r","title":"predmicror: Fitting predictive microbiology models in r","text":"predmicror collection predictive microbiology models commonly fitted experimental data. first version includes set popular full, reduced lag growth models.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"predmicror: Fitting predictive microbiology models in r","text":"can install predmicror development version GitHub: https://github.com/fsqanalytics/predmicror using devtools package:","code":"install.packages(\"devtools\") devtools::install_github(\"fsqanalytics/predmicror\")"},{"path":"/index.html","id":"using-predmicror","dir":"","previous_headings":"","what":"Using predmicror","title":"predmicror: Fitting predictive microbiology models in r","text":"easiest way get started predmicror work examples vignettes, can find information : input data look like fit full growth curve fit reduced growth curve fit lag growth curve can find vignettes predmicror website https://github.com/fsqanalytics/fsqanalystics.github.io.","code":""},{"path":"/index.html","id":"reporting-bugs","dir":"","previous_headings":"","what":"Reporting bugs","title":"predmicror: Fitting predictive microbiology models in r","text":"can report bugs : https://github.com/fsqanalytics/predmicror/issues","code":""},{"path":"/reference/BaranyiFM.html","id":null,"dir":"Reference","previous_headings":"","what":"Baranyi and Roberts full growth model — BaranyiFM","title":"Baranyi and Roberts full growth model — BaranyiFM","text":"BaranyiFM function fit Baranyi & Roberts full growth model complete microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/BaranyiFM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baranyi and Roberts full growth model — BaranyiFM","text":"","code":"BaranyiFM(t, Y0, Ymax, MUmax, lag)"},{"path":"/reference/BaranyiFM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baranyi and Roberts full growth model — BaranyiFM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 Ymax natural logarithm maximum concentration (ln(Nmax)) reached microorganism MUmax maximum specific growth rate given time units lag duration lag phase time units","code":""},{"path":"/reference/BaranyiFM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baranyi and Roberts full growth model — BaranyiFM","text":"object nls class fitted parameters model","code":""},{"path":"/reference/BaranyiFM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Baranyi and Roberts full growth model — BaranyiFM","text":"model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(N(t)).","code":""},{"path":"/reference/BaranyiFM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Baranyi and Roberts full growth model — BaranyiFM","text":"Baranyi J, Roberts TA (1994). “dynamic approach predicting bacterial growth food.” International Journal Food Microbiology, 23, 277-294.","code":""},{"path":"/reference/BaranyiFM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Baranyi and Roberts full growth model — BaranyiFM","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/BaranyiFM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Baranyi and Roberts full growth model — BaranyiFM","text":"","code":"library(gslnls) data(growthfull) initial_values = list(Y0=-0.1, Ymax=22, MUmax=1.7, lag=5) fit <- gsl_nls(lnN ~ BaranyiFM(Time, Y0, Ymax, MUmax, lag),                data=growthfull,                start =  initial_values) summary(fit) #>  #> Formula: lnN ~ BaranyiFM(Time, Y0, Ymax, MUmax, lag) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0    -0.01043    0.27279  -0.038     0.97     #> Ymax  21.13052    0.22783  92.748 9.98e-15 *** #> MUmax  1.86815    0.06507  28.712 3.67e-10 *** #> lag    5.08623    0.28282  17.984 2.31e-08 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4525 on 9 degrees of freedom #>  #> Number of iterations to convergence: 7  #> Achieved convergence tolerance: 0 #>"},{"path":"/reference/BaranyiRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Baranyi and Roberts reduced growth model — BaranyiRM","title":"Baranyi and Roberts reduced growth model — BaranyiRM","text":"BaranyiRM function fit Baranyi Roberts growth model reduced microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/BaranyiRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baranyi and Roberts reduced growth model — BaranyiRM","text":"","code":"BaranyiRM(t, Y0, MUmax, lag)"},{"path":"/reference/BaranyiRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baranyi and Roberts reduced growth model — BaranyiRM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 MUmax maximum specific growth rate given time units lag duration lag phase time units","code":""},{"path":"/reference/BaranyiRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baranyi and Roberts reduced growth model — BaranyiRM","text":"object nls class fitted parameters model","code":""},{"path":"/reference/BaranyiRM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Baranyi and Roberts reduced growth model — BaranyiRM","text":"Model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(N(t)).","code":""},{"path":"/reference/BaranyiRM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Baranyi and Roberts reduced growth model — BaranyiRM","text":"Baranyi J, Roberts TA (1995). “Mathematics predictive microbiology.” International Journal Food Microbiology, 26, 199-218.","code":""},{"path":"/reference/BaranyiRM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Baranyi and Roberts reduced growth model — BaranyiRM","text":"Vasco Cadavez, vcadavez@ipb.pt Ursula Gonzales-Barron, ubarron@ipb.pt","code":""},{"path":"/reference/BaranyiRM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Baranyi and Roberts reduced growth model — BaranyiRM","text":"","code":"## Example: Baranyi reduced model library(gslnls) data(growthred)  # simulated data set. initial_values = list(Y0=0.1, MUmax=1.7, lag=5) # define the initial values fit <- gsl_nls(lnN ~ BaranyiRM(Time, Y0, MUmax, lag),            data=growthred,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ BaranyiRM(Time, Y0, MUmax, lag) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0    -0.01690    0.24928  -0.068    0.948     #> MUmax  1.84523    0.05189  35.560  3.3e-08 *** #> lag    9.29338    0.68563  13.555  1.0e-05 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4117 on 6 degrees of freedom #>  #> Number of iterations to convergence: 6  #> Achieved convergence tolerance: 1.426e-12 #>"},{"path":"/reference/BuchananRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Buchanan reduced growth model — BuchananRM","title":"Buchanan reduced growth model — BuchananRM","text":"BuchananRM function fit Buchanan reduced growth model reduced microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/BuchananRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Buchanan reduced growth model — BuchananRM","text":"","code":"BuchananRM(t, Y0, MUmax, lag)"},{"path":"/reference/BuchananRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Buchanan reduced growth model — BuchananRM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 MUmax maximum specific growth rate given time units lag duration lag phase time units","code":""},{"path":"/reference/BuchananRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Buchanan reduced growth model — BuchananRM","text":"object nls class","code":""},{"path":"/reference/BuchananRM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Buchanan reduced growth model — BuchananRM","text":"Model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(N(t)).","code":""},{"path":"/reference/BuchananRM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Buchanan reduced growth model — BuchananRM","text":"Buchanan RL, Whiting RC, Damert WC (1997). “simple good enough: comparison Gompertz, Baranyi, three-phase linear models fitting bacterial growth curves.” Food Microbiology, 14(4), 313-326. ISSN 0740-0020, doi:10.1006/fmic.1997.0125 , http://www.sciencedirect.com/science/article/pii/S0740002097901258.","code":""},{"path":"/reference/BuchananRM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Buchanan reduced growth model — BuchananRM","text":"Vasco Cadavez, vcadavez@ipb.pt Ursula Gonzales-Barron, ubarron@ipb.pt","code":""},{"path":"/reference/BuchananRM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Buchanan reduced growth model — BuchananRM","text":"","code":"## Example: Buchanan reduced model library(gslnls) data(growthred)  # simulated data set. initial_values = list(Y0=0, MUmax=1.7, lag=5) # define the initial values fit <- gsl_nls(lnN ~ BuchananRM(Time, Y0, MUmax, lag),            data=growthred,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ BuchananRM(Time, Y0, MUmax, lag) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0     0.05010    0.22810    0.22    0.833     #> MUmax  1.83840    0.04722   38.93 1.92e-08 *** #> lag    5.04160    0.21567   23.38 4.02e-07 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.3951 on 6 degrees of freedom #>  #> Number of iterations to convergence: 3  #> Achieved convergence tolerance: 2.269e-11 #>"},{"path":"/reference/CMAW.html","id":null,"dir":"Reference","previous_headings":"","what":"Cardinal model for water activity — CMAW","title":"Cardinal model for water activity — CMAW","text":"CMAW function fit water activity cardinal model (Rosso et al., 1993). Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/CMAW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cardinal model for water activity — CMAW","text":"","code":"CMAW(x, AWmin, MUopt, AWopt)"},{"path":"/reference/CMAW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cardinal model for water activity — CMAW","text":"x numeric vector indicating water activity experiment AWmin minimum water activity growth MUopt optimum growth rate AWopt optimum water activity growth","code":""},{"path":"/reference/CMAW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cardinal model for water activity — CMAW","text":"object nls class fitted parameters model","code":""},{"path":"/reference/CMAW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cardinal model for water activity — CMAW","text":"model's inputs : x: Water activity sqrtGR: square root growth rate ($h^-1$) Users make sure growth rate input entered square root transformation, sqrGR = sqrt(GR).","code":""},{"path":"/reference/CMAW.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cardinal model for water activity — CMAW","text":"Rosso L, Lobry J, Charles (Bajard) S, Flandrois J (1995). “Convenient Model Describe Combined Effects Temperature pH Microbial Growth.” Applied environmental microbiology, 61, 610–6. doi:10.1128/AEM.61.2.610-616.1995 .","code":""},{"path":"/reference/CMAW.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cardinal model for water activity — CMAW","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/CMAW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cardinal model for water activity — CMAW","text":"","code":"library(gslnls) data(aw) initial_values = list(AWmin=0.89, MUopt=1.0, AWopt=0.98) fit <- gsl_nls(sqrtGR ~ CMAW(aw,AWmin,MUopt,AWopt),                data=aw,                start =  initial_values) summary(fit) #>  #> Formula: sqrtGR ~ CMAW(aw, AWmin, MUopt, AWopt) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> AWmin 0.771652   0.005203  148.30 6.34e-12 *** #> MUopt 1.558631   0.060203   25.89 2.19e-07 *** #> AWopt 0.946016   0.002955  320.16 6.27e-14 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.04824 on 6 degrees of freedom #>  #> Number of iterations to convergence: 7  #> Achieved convergence tolerance: 4.333e-12 #>"},{"path":"/reference/CMInh.html","id":null,"dir":"Reference","previous_headings":"","what":"Cardinal model for growth inhibitors — CMInh","title":"Cardinal model for growth inhibitors — CMInh","text":"CMInh function fit growth inhibitors cardinal model (Rosso et al, 1993). Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/CMInh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cardinal model for growth inhibitors — CMInh","text":"","code":"CMInh(x, MIC, MUopt, alpha)"},{"path":"/reference/CMInh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cardinal model for growth inhibitors — CMInh","text":"x numeric vector indicating inhibitor concentration experiment MIC minimum inhibitory concentration (mM %, accordingly) MUopt optimum growth rate alpha shape parameter curve (alpha = 1 shape linear; alpha > 1 shape downward concave; alpha < 1 shape upward concave)","code":""},{"path":"/reference/CMInh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cardinal model for growth inhibitors — CMInh","text":"object nls class fitted parameters model","code":""},{"path":"/reference/CMInh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cardinal model for growth inhibitors — CMInh","text":"model's inputs : x: growth inhibitor concentration sqrtGR: square root growth rate ($time^-1$) Users make sure growth rate input entered square root transformation, $sqrGR = sqrt(GR)$.","code":""},{"path":"/reference/CMInh.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cardinal model for growth inhibitors — CMInh","text":"Rosso L, Lobry J, Charles (Bajard) S, Flandrois J (1995). “Convenient Model Describe Combined Effects Temperature pH Microbial Growth.” Applied environmental microbiology, 61, 610–6. doi:10.1128/AEM.61.2.610-616.1995 .","code":""},{"path":"/reference/CMInh.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cardinal model for growth inhibitors — CMInh","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/CMInh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cardinal model for growth inhibitors — CMInh","text":"","code":"library(gslnls) data(inh) initial_values = list(MIC=0.89, MUopt=1.0, alpha=1) fit <- gsl_nls(sqrtGR ~ CMInh(Conce,MIC,MUopt,alpha),                data=inh,                start =  initial_values) summary(fit) #>  #> Formula: sqrtGR ~ CMInh(Conce, MIC, MUopt, alpha) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)   #> MIC     3.7676     2.2655   1.663   0.1572   #> MUopt   0.7416     0.3426   2.165   0.0827 . #> alpha   0.6733     0.8736   0.771   0.4757   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.2011 on 5 degrees of freedom #>  #> Number of iterations to convergence: 8  #> Achieved convergence tolerance: 3.524e-07 #>"},{"path":"/reference/CMPH.html","id":null,"dir":"Reference","previous_headings":"","what":"Cardinal model for pH — CMPH","title":"Cardinal model for pH — CMPH","text":"CMPH function fit pH cardinal model (Rosso et al, 1993). Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/CMPH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cardinal model for pH — CMPH","text":"","code":"CMPH(x, pHmax, pHmin, MUopt, pHopt)"},{"path":"/reference/CMPH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cardinal model for pH — CMPH","text":"x numeric vector indicating pH experiment pHmax maximum pH growth pHmin minimum pH growth MUopt optimum growth rate pHopt optimum pH growth","code":""},{"path":"/reference/CMPH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cardinal model for pH — CMPH","text":"object nls class fitted parameters model","code":""},{"path":"/reference/CMPH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cardinal model for pH — CMPH","text":"model's inputs : x: pH sqrtGR: square root growth rate ($time^-1$) Users make sure growth rate input entered square root transformation, sqrGR = sqrt(GR).","code":""},{"path":"/reference/CMPH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cardinal model for pH — CMPH","text":"Rosso L, Lobry J, Charles (Bajard) S, Flandrois J (1995). “Convenient Model Describe Combined Effects Temperature pH Microbial Growth.” Applied environmental microbiology, 61, 610–6. doi:10.1128/AEM.61.2.610-616.1995 .","code":""},{"path":"/reference/CMPH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cardinal model for pH — CMPH","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/CMPH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cardinal model for pH — CMPH","text":"","code":"library(gslnls) data(ph) initial_values = list(pHmax=9, pHmin=3, MUopt=1.0, pHopt=7) fit <- gsl_nls(sqrtGR ~ CMPH(pH,pHmax,pHmin,MUopt,pHopt),                data=ph,                start =  initial_values) summary(fit) #>  #> Formula: sqrtGR ~ CMPH(pH, pHmax, pHmin, MUopt, pHopt) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> pHmax  9.34191    0.04002  233.42  < 2e-16 *** #> pHmin  4.37859    0.01484  295.10  < 2e-16 *** #> MUopt  1.05158    0.04180   25.16 2.26e-10 *** #> pHopt  7.31579    0.08769   83.42 1.50e-15 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.04141 on 10 degrees of freedom #>  #> Number of iterations to convergence: 28  #> Achieved convergence tolerance: 2.045e-13 #>"},{"path":"/reference/CMTI.html","id":null,"dir":"Reference","previous_headings":"","what":"Cardinal model for temperature — CMTI","title":"Cardinal model for temperature — CMTI","text":"CMTI function fit temperature cardinal model (Rosso et al, 1993). Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/CMTI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cardinal model for temperature — CMTI","text":"","code":"CMTI(x, Tmax, Tmin, MUopt, Topt)"},{"path":"/reference/CMTI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cardinal model for temperature — CMTI","text":"x numeric vector indicating temperature experiment Tmax maximum temperature growth Tmin minimum temperature growth MUopt optimum growth rate Topt optimum temperature growth","code":""},{"path":"/reference/CMTI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cardinal model for temperature — CMTI","text":"object nls class fitted parameters model","code":""},{"path":"/reference/CMTI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cardinal model for temperature — CMTI","text":"model's inputs : x: Temperature sqrtGR: square root growth rate ($h^-1$) Users make sure growth rate input entered square root transformation, sqrGR = sqrt(GR).","code":""},{"path":"/reference/CMTI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cardinal model for temperature — CMTI","text":"Rosso L, Lobry J, Charles (Bajard) S, Flandrois J (1995). “Convenient Model Describe Combined Effects Temperature pH Microbial Growth.” Applied environmental microbiology, 61, 610–6. doi:10.1128/AEM.61.2.610-616.1995 .","code":""},{"path":"/reference/CMTI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cardinal model for temperature — CMTI","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/CMTI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cardinal model for temperature — CMTI","text":"","code":"library(gslnls) data(salmonella) initial_values = list(Tmax=42, Tmin=1, MUopt=1.0, Topt=37) fit <- gsl_nls(sqrtGR ~ CMTI(Temp,Tmax,Tmin,MUopt,Topt),                data=salmonella,                start =  initial_values) summary(fit) #>  #> Formula: sqrtGR ~ CMTI(Temp, Tmax, Tmin, MUopt, Topt) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Tmax  49.03256    0.13335  367.69  < 2e-16 *** #> Tmin   5.02679    0.37058   13.56 1.51e-10 *** #> MUopt  0.75206    0.01156   65.05  < 2e-16 *** #> Topt  40.36709    0.24985  161.56  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.01718 on 17 degrees of freedom #>  #> Number of iterations to convergence: 41  #> Achieved convergence tolerance: 1.119e-11 #>   plot(salmonella$Temp, salmonella$sqrtGR^2) lines(salmonella$Temp, fitted(fit)^2, col=\"green\")  plot(salmonella$Temp, salmonella$sqrtGR) lines(salmonella$Temp, fitted(fit), col=\"red\")"},{"path":"/reference/FangNLM.html","id":null,"dir":"Reference","previous_headings":"","what":"Fang no lag growth model — FangNLM","title":"Fang no lag growth model — FangNLM","text":"FangNLM function fit Fang lag growth model incomplete microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/FangNLM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fang no lag growth model — FangNLM","text":"","code":"FangNLM(t, Y0, Ymax, MUmax)"},{"path":"/reference/FangNLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fang no lag growth model — FangNLM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 Ymax natural logarithm maximum concentration (ln(Nmax)) reached microorganism MUmax maximum specific growth rate given time units","code":""},{"path":"/reference/FangNLM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fang no lag growth model — FangNLM","text":"object nls class","code":""},{"path":"/reference/FangNLM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fang no lag growth model — FangNLM","text":"Model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(N(t)).","code":""},{"path":"/reference/FangNLM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fang no lag growth model — FangNLM","text":"Fang T, Gurtler JB, Huang L (2012). “Growth Kinetics Model Comparison Cronobacter sakazakii Reconstituted Powdered Infant Formula.” Journal Food Science, 77(9), E247-E255. doi:10.1111/j.1750-3841.2012.02873.x , https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1750-3841.2012.02873.x, https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1750-3841.2012.02873.x.  Fang T, Liu Y, Huang L (2013). “Growth kinetics Listeria monocytogenes spoilage microorganisms fresh-cut cantaloupe.” Food Microbiology, 34(1), 174-181. ISSN 0740-0020, doi:10.1016/j.fm.2012.12.005 .","code":""},{"path":"/reference/FangNLM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fang no lag growth model — FangNLM","text":"Vasco Cadavez, vcadavez@ipb.pt Ursula Gonzales-Barron, ubarron@ipb.pt","code":""},{"path":"/reference/FangNLM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fang no lag growth model — FangNLM","text":"","code":"## Example: Fang no lag model library(gslnls) data(growthnolag)  # simulated data set. initial_values = list(Y0=0, Ymax=22, MUmax=1.7) # define the initial values fit <- gsl_nls(lnN ~ FangNLM(Time, Y0, Ymax, MUmax),            data=growthnolag,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ FangNLM(Time, Y0, Ymax, MUmax) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0     1.75827    0.36368   4.835  0.00189 **  #> Ymax  21.13234    0.24673  85.650 7.79e-12 *** #> MUmax  1.85922    0.06619  28.091 1.86e-08 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4896 on 7 degrees of freedom #>  #> Number of iterations to convergence: 5  #> Achieved convergence tolerance: 1.386e-12 #>"},{"path":"/reference/GeeraerdST.html","id":null,"dir":"Reference","previous_headings":"","what":"Geeraerd inactivation model — GeeraerdST","title":"Geeraerd inactivation model — GeeraerdST","text":"GeeraerdST inactivation model microbial inactivation curve. Returns model parameters estimated according data collected microbial inactivation experiments.","code":""},{"path":"/reference/GeeraerdST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geeraerd inactivation model — GeeraerdST","text":"","code":"GeeraerdST(x, Y0, Yres, kmax, Sl)"},{"path":"/reference/GeeraerdST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geeraerd inactivation model — GeeraerdST","text":"x numeric vector indicating heating time constant temperature experiment Y0 initial (time=0) bacterial concentration (log10(N0)) Yres low asymptote reflecting presence resistant sub-population (log10(Nres)) kmax maximum inactivation rate Sl represents shoulder phase preceding sharp inactivation slope curve","code":""},{"path":"/reference/GeeraerdST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geeraerd inactivation model — GeeraerdST","text":"object nls class fitted parameters model","code":""},{"path":"/reference/GeeraerdST.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geeraerd inactivation model — GeeraerdST","text":"model's inputs : t: time, assuming time zero beginning experiment. N(t): bacterial concentration measured time t. Users make sure bacterial concentration input entered base 10 logarithm, Y(t) = log10(N(t)).","code":""},{"path":"/reference/GeeraerdST.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Geeraerd inactivation model — GeeraerdST","text":"Geeraerd AH, Valdramidis VP, Van Impe JF (2005). “GInaFiT, freeware tool assess non-log-linear microbial survivor curves.” International Journal Food Microbiology, 102(1), 95-105. ISSN 0168-1605, doi:10.1016/j.ijfoodmicro.2004.11.038 .","code":""},{"path":"/reference/GeeraerdST.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Geeraerd inactivation model — GeeraerdST","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/GeeraerdST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geeraerd inactivation model — GeeraerdST","text":"","code":"library(gslnls) data(mafart2005Li11) initial_values = list(Y0=10, Yres=7, kmax=0.7, Sl=4) fit <- gsl_nls(logN ~  GeeraerdST(Time,Y0,Yres,kmax,Sl),                data=mafart2005Li11,                start =  initial_values) summary(fit) #>  #> Formula: logN ~ GeeraerdST(Time, Y0, Yres, kmax, Sl) #>  #> Parameters: #>      Estimate Std. Error t value Pr(>|t|)     #> Y0   10.07258    0.08464 119.000 2.37e-11 *** #> Yres  6.93372    0.07834  88.504 1.40e-10 *** #> kmax  0.59485    0.05436  10.943 3.46e-05 *** #> Sl    5.67218    0.82123   6.907 0.000455 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.1192 on 6 degrees of freedom #>  #> Number of iterations to convergence: 7  #> Achieved convergence tolerance: 1.043e-10 #>   plot(logN ~ Time, data=mafart2005Li11) lines(mafart2005Li11$Time, predict(fit), col=\"blue\")"},{"path":"/reference/HuangFM.html","id":null,"dir":"Reference","previous_headings":"","what":"Huang full growth model — HuangFM","title":"Huang full growth model — HuangFM","text":"HuangFM function fit Huang full growth model complete microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/HuangFM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Huang full growth model — HuangFM","text":"","code":"HuangFM(t, Y0, Ymax, MUmax, lag)"},{"path":"/reference/HuangFM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Huang full growth model — HuangFM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 Ymax natural logarithm maximum concentration (ln(Nmax)) reached microorganism MUmax maximum specific growth rate given time units lag duration lag phase time units","code":""},{"path":"/reference/HuangFM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Huang full growth model — HuangFM","text":"object nls class","code":""},{"path":"/reference/HuangFM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Huang full growth model — HuangFM","text":"Model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(X(t)).","code":""},{"path":"/reference/HuangFM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Huang full growth model — HuangFM","text":"Huang L (2008). “Growth Kinetics Listeria monocytogenes Broth Beef Frankfurters-Determination Lag Phase Duration Exponential Growth Rate Isothermal Conditions.” Journal Food Science, 73(5), E235-E242. doi:10.1111/j.1750-3841.2008.00785.x .","code":""},{"path":"/reference/HuangFM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Huang full growth model — HuangFM","text":"Vasco Cadavez, vcadavez@ipb.pt Ursula Gonzales-Barron, ubarron@ipb.pt","code":""},{"path":"/reference/HuangFM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Huang full growth model — HuangFM","text":"","code":"## Example: Huang full model library(gslnls) data(growthfull)  # simulated data set. initial_values = list(Y0=0, Ymax=22, MUmax=1.7, lag=5) # define the initial values ## Call the fitting function fit <- gsl_nls(lnN ~ HuangFM(Time, Y0, Ymax, MUmax, lag),            data=growthfull,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ HuangFM(Time, Y0, Ymax, MUmax, lag) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0     0.04562    0.25768   0.177    0.863     #> Ymax  21.13232    0.22393  94.372 8.54e-15 *** #> MUmax  1.85942    0.06076  30.601 2.08e-10 *** #> lag    5.07987    0.25000  20.320 7.89e-09 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4444 on 9 degrees of freedom #>  #> Number of iterations to convergence: 5  #> Achieved convergence tolerance: 9.033e-13 #>   confint(fit) #>        2.5 %     97.5 % #> 1 -0.5372874  0.6285347 #> 2 20.6257592 21.6388712 #> 3  1.7219672  1.9968814 #> 4  4.5143280  5.6454030  preds <- data.frame(predict(fit, interval = \"prediction\", level = 0.95)) plot(lnN ~ Time, data=growthfull, ylim=c(-1,22)) lines(growthfull$Time, preds$fit, col=\"blue\") lines(growthfull$Time, preds$upr, col=\"red\") lines(growthfull$Time, preds$lwr, col=\"red\")"},{"path":"/reference/HuangNLM.html","id":null,"dir":"Reference","previous_headings":"","what":"Huang no lag growth model — HuangNLM","title":"Huang no lag growth model — HuangNLM","text":"HuangNLM function fit Huang lag growth model incomplete microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/HuangNLM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Huang no lag growth model — HuangNLM","text":"","code":"HuangNLM(t, Y0, Ymax, MUmax)"},{"path":"/reference/HuangNLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Huang no lag growth model — HuangNLM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 Ymax natural logarithm maximum concentration (ln(Nmax)) reached microorganism MUmax maximum specific growth rate given time units","code":""},{"path":"/reference/HuangNLM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Huang no lag growth model — HuangNLM","text":"object nls class","code":""},{"path":"/reference/HuangNLM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Huang no lag growth model — HuangNLM","text":"Model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(N(t)).","code":""},{"path":"/reference/HuangNLM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Huang no lag growth model — HuangNLM","text":"Huang L (2013). “Optimization new mathematical model bacterial growth.” Food Control, 32(1), 283 - 288. ISSN 0956-7135, doi:10.1016/j.foodcont.2012.11.019 , http://www.sciencedirect.com/science/article/pii/S0956713512006214.","code":""},{"path":"/reference/HuangNLM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Huang no lag growth model — HuangNLM","text":"Vasco Cadavez, vcadavez@ipb.pt Ursula Gonzales-Barron, ubarron@ipb.pt","code":""},{"path":"/reference/HuangNLM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Huang no lag growth model — HuangNLM","text":"","code":"## Example: Fang no lag model library(gslnls) data(growthnolag)  # simulated data set. initial_values = list(Y0=0, Ymax=22, MUmax=1.7) # define the initial values ## Call the fitting function fit <- gsl_nls(lnN ~ HuangNLM(Time, Y0, Ymax, MUmax),            data=growthnolag,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ HuangNLM(Time, Y0, Ymax, MUmax) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0     1.75827    0.36368   4.835  0.00189 **  #> Ymax  21.13234    0.24673  85.650 7.79e-12 *** #> MUmax  1.85922    0.06619  28.091 1.86e-08 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4896 on 7 degrees of freedom #>  #> Number of iterations to convergence: 5  #> Achieved convergence tolerance: 1.4e-12 #>"},{"path":"/reference/HuangRGS.html","id":null,"dir":"Reference","previous_headings":"","what":"Huang reparameterized Gompertz survival model — HuangRGS","title":"Huang reparameterized Gompertz survival model — HuangRGS","text":"HuangRGS reparametrized Gompertz survival model microbial inactivation. Returns model parameters estimated according data collected microbial inactivation experiments.","code":""},{"path":"/reference/HuangRGS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Huang reparameterized Gompertz survival model — HuangRGS","text":"","code":"HuangRGS(x, Y0, k, M)"},{"path":"/reference/HuangRGS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Huang reparameterized Gompertz survival model — HuangRGS","text":"x numeric vector indicating heating time constant temperature experiment Y0 initial microbial concentration (log10(cfu 1/g)) k inactivation rate (1/s) M time constant (s)","code":""},{"path":"/reference/HuangRGS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Huang reparameterized Gompertz survival model — HuangRGS","text":"object nls class fitted parameters model","code":""},{"path":"/reference/HuangRGS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Huang reparameterized Gompertz survival model — HuangRGS","text":"model's inputs : t: time, assuming time zero beginning experiment. Y(t): base 10 logarithm bacterial concentration ($log10(X(t)$) measured time t. Users make sure bacterial concentration input entered base 10 logarithm, Y(t) = log10(X(t)).","code":""},{"path":"/reference/HuangRGS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Huang reparameterized Gompertz survival model — HuangRGS","text":"Huang L (2009). “Thermal inactivation Listeria monocytogenes ground beef isothermal dynamic temperature conditions.” Journal Food Engineering, 90(3), 380-387. ISSN 0260-8774, doi:10.1016/j.jfoodeng.2008.07.011 , https://www.sciencedirect.com/science/article/pii/S0260877408003439.","code":""},{"path":"/reference/HuangRGS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Huang reparameterized Gompertz survival model — HuangRGS","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/HuangRGS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Huang reparameterized Gompertz survival model — HuangRGS","text":"","code":"library(gslnls) data(bixina) initial_values = list(Y0=5.6, k=0.37, M=6.8) fit <- gsl_nls(lnN ~ HuangRGS(Time, Y0, k, M),            data=bixina,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ HuangRGS(Time, Y0, k, M) #>  #> Parameters: #>     Estimate Std. Error t value Pr(>|t|)     #> Y0  5.502090   0.046071  119.43  < 2e-16 *** #> k   0.182138   0.009672   18.83 7.53e-12 *** #> M  12.053884   0.150299   80.20  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.1154 on 15 degrees of freedom #>  #> Number of iterations to convergence: 12  #> Achieved convergence tolerance: 1.786e-12 #>   plot(lnN ~ Time, data=bixina) lines(bixina$Time, predict(fit), col=\"blue\")"},{"path":"/reference/HuangRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Huang reduced growth model — HuangRM","title":"Huang reduced growth model — HuangRM","text":"HuangRM function fit Huang reduced growth model reduced microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/HuangRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Huang reduced growth model — HuangRM","text":"","code":"HuangRM(t, Y0, MUmax, lag)"},{"path":"/reference/HuangRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Huang reduced growth model — HuangRM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 MUmax maximum specific growth rate given time units lag duration lag phase time units","code":""},{"path":"/reference/HuangRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Huang reduced growth model — HuangRM","text":"object nls class","code":""},{"path":"/reference/HuangRM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Huang reduced growth model — HuangRM","text":"Model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(N(t)).","code":""},{"path":"/reference/HuangRM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Huang reduced growth model — HuangRM","text":"Huang L (2008). “Growth Kinetics Listeria monocytogenes Broth Beef Frankfurters-Determination Lag Phase Duration Exponential Growth Rate Isothermal Conditions.” Journal Food Science, 73(5), E235-E242. doi:10.1111/j.1750-3841.2008.00785.x .","code":""},{"path":"/reference/HuangRM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Huang reduced growth model — HuangRM","text":"Vasco Cadavez, vcadavez@ipb.pt & Ursula Gonzales-Barron, ubarron@ipb.pt","code":""},{"path":"/reference/HuangRM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Huang reduced growth model — HuangRM","text":"","code":"## Example: Huang reduced model library(gslnls) data(growthred)  # simulated data set. initial_values = list(Y0=0, MUmax=1.7, lag=5) # define the initial values fit <- gsl_nls(lnN ~ HuangRM(Time, Y0, MUmax, lag),            data=growthred,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ HuangRM(Time, Y0, MUmax, lag) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0     0.04513    0.22979   0.196    0.851     #> MUmax  1.83842    0.04777  38.485 2.06e-08 *** #> lag    5.03914    0.22005  22.900 4.54e-07 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.3959 on 6 degrees of freedom #>  #> Number of iterations to convergence: 3  #> Achieved convergence tolerance: 4.906e-10 #>"},{"path":"/reference/RichardsNLM.html","id":null,"dir":"Reference","previous_headings":"","what":"Richards no lag growth model — RichardsNLM","title":"Richards no lag growth model — RichardsNLM","text":"RichardsNLM function fit Richards lag growth model incomplete microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/RichardsNLM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Richards no lag growth model — RichardsNLM","text":"","code":"RichardsNLM(t, Y0, Ymax, MUmax)"},{"path":"/reference/RichardsNLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Richards no lag growth model — RichardsNLM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 Ymax natural logarithm maximum concentration (ln(Nmax)) reached microorganism MUmax maximum specific growth rate given time units","code":""},{"path":"/reference/RichardsNLM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Richards no lag growth model — RichardsNLM","text":"object nls class","code":""},{"path":"/reference/RichardsNLM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Richards no lag growth model — RichardsNLM","text":"Model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(N(t)).","code":""},{"path":"/reference/RichardsNLM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Richards no lag growth model — RichardsNLM","text":"Richards JF (1959). “flexible growth function empirical use.” J Exp Bot, 1(10), 290-310.","code":""},{"path":"/reference/RichardsNLM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Richards no lag growth model — RichardsNLM","text":"Vasco Cadavez, vcadavez@ipb.pt Ursula Gonzales-Barron, ubarron@ipb.pt","code":""},{"path":"/reference/RichardsNLM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Richards no lag growth model — RichardsNLM","text":"","code":"## Example: Richards no lag model library(gslnls) data(growthnolag)  # simulated data set. initial_values = list(Y0=0, Ymax=22, MUmax=1.7) ## Fitting the function to the experimental data fit <- gsl_nls(lnN ~ RichardsNLM(Time, Y0, Ymax, MUmax),                data=growthnolag,                start =  initial_values) summary(fit) #>  #> Formula: lnN ~ RichardsNLM(Time, Y0, Ymax, MUmax) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0     1.75827    0.36368   4.835  0.00189 **  #> Ymax  21.13234    0.24673  85.650 7.79e-12 *** #> MUmax  1.85922    0.06619  28.091 1.86e-08 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4896 on 7 degrees of freedom #>  #> Number of iterations to convergence: 5  #> Achieved convergence tolerance: 1.326e-12 #>"},{"path":"/reference/RossoFM.html","id":null,"dir":"Reference","previous_headings":"","what":"Rosso full growth model — RossoFM","title":"Rosso full growth model — RossoFM","text":"RossoFM function fit Rosso full growth model complete microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/RossoFM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rosso full growth model — RossoFM","text":"","code":"RossoFM(t, Y0, MUmax, Ymax, lag)"},{"path":"/reference/RossoFM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rosso full growth model — RossoFM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 MUmax maximum specific growth rate given time units Ymax natural logarithm maximum concentration (ln(Nmax)) reached microorganism lag duration lag phase time units","code":""},{"path":"/reference/RossoFM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rosso full growth model — RossoFM","text":"object nls class","code":""},{"path":"/reference/RossoFM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rosso full growth model — RossoFM","text":"Model's inputs :s t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(X(t)).","code":""},{"path":"/reference/RossoFM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rosso full growth model — RossoFM","text":"Rosso L, Bajard S, Flandrois JP, Lahellec C, Fournaud J, Veit P (1996). “Differential growth Listeria monocytogenes 4 8 ºC: Consequences Shelf Life Chilled Products.” Journal Food Protection, 59(9), 944-949. ISSN 0362-028X, doi:10.4315/0362-028X-59.9.944 , https://meridian.allenpress.com/jfp/article-pdf/59/9/944/1666209/0362-028x-59\\_9\\_944.pdf.","code":""},{"path":"/reference/RossoFM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rosso full growth model — RossoFM","text":"Vasco Cadavez (vcadavez@ipb.pt) Ursula Gonzales-Barron (ubarron@ipb.pt)","code":""},{"path":"/reference/RossoFM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rosso full growth model — RossoFM","text":"","code":"## Example: Rosso full model library(gslnls) data(growthfull)  # simulated data set. initial_values = list(Y0=0.04, Ymax=21, MUmax=1.9, lag=5.0) # define the initial values fit <- gsl_nls(lnN ~ RossoFM(Time, Y0, Ymax, MUmax, lag),            data=growthfull,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ RossoFM(Time, Y0, Ymax, MUmax, lag) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0      0.0501     0.2562   0.196    0.849     #> Ymax    1.8592     0.0600  30.989 1.86e-10 *** #> MUmax  21.1323     0.2237  94.485 8.45e-15 *** #> lag     5.0812     0.2447  20.761 6.53e-09 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4438 on 9 degrees of freedom #>  #> Number of iterations to convergence: 25  #> Achieved convergence tolerance: 1.55e-12 #>"},{"path":"/reference/WeibullM.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull inactivation model Mafart — WeibullM","title":"Weibull inactivation model Mafart — WeibullM","text":"WeibullM inactivation model microbial inactivation curve. Returns model parameters estimated according data collected microbial inactivation experiments.","code":""},{"path":"/reference/WeibullM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull inactivation model Mafart — WeibullM","text":"","code":"WeibullM(x, Y0, sigma, alpha)"},{"path":"/reference/WeibullM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull inactivation model Mafart — WeibullM","text":"x numeric vector indicating heating time constant temperature experiment Y0 base 10 logarithm initial (time=0) bacterial concentration (N0) sigma time first decimal reduction alpha shape parameter","code":""},{"path":"/reference/WeibullM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull inactivation model Mafart — WeibullM","text":"object nls class fitted parameters model","code":""},{"path":"/reference/WeibullM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weibull inactivation model Mafart — WeibullM","text":"model's inputs : t: time, assuming time zero beginning experiment. Y(t): base 10 logarithm bacterial concentration ($log10(N(t)$) measured time t. Users make sure bacterial concentration input entered base 10 logarithm, Y(t) = log10(N(t)).","code":""},{"path":"/reference/WeibullM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weibull inactivation model Mafart — WeibullM","text":"Mafart P, Couvert O, Gaillard S, Leguerinel (2002). “calculating sterility thermal preservation methods: application Weibull frequency distribution model.” International Journal Food Microbiology, 72, 107-113.","code":""},{"path":"/reference/WeibullM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weibull inactivation model Mafart — WeibullM","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/WeibullM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weibull inactivation model Mafart — WeibullM","text":"","code":"library(gslnls) data(bixina) initial_values = list(Y0=2.5, sigma=2, alpha=2) bixina$N <- exp(bixina$lnN) bixina$logN <- log10(bixina$N) fit <- gsl_nls(logN ~  WeibullM(Time,Y0,sigma, alpha),                data=bixina,                start =  initial_values) summary(fit) #>  #> Formula: logN ~ WeibullM(Time, Y0, sigma, alpha) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0     2.40313    0.01691  142.09  < 2e-16 *** #> sigma 12.87224    0.13543   95.05  < 2e-16 *** #> alpha  2.39534    0.13162   18.20 1.23e-11 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.042 on 15 degrees of freedom #>  #> Number of iterations to convergence: 14  #> Achieved convergence tolerance: 1.208e-08 #>   plot(logN ~ Time, data=bixina) lines(bixina$Time, predict(fit), col=\"blue\")"},{"path":"/reference/WeibullMM.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull inactivation modified model Mafart — WeibullMM","title":"Weibull inactivation modified model Mafart — WeibullMM","text":"WeibullMM inactivation model microbial inactivation curve. Returns model parameters estimated according data collected microbial inactivation experiments.","code":""},{"path":"/reference/WeibullMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull inactivation modified model Mafart — WeibullMM","text":"","code":"WeibullMM(x, Y0, Yres, sigma, alpha)"},{"path":"/reference/WeibullMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull inactivation modified model Mafart — WeibullMM","text":"x numeric vector indicating heating time constant temperature experiment Y0 log10 initial bacterial concentration (time t=0) Yres log10 residual bacterial concentration (end experiment) sigma represents time first decimal reduction concentration part population belonging Yres alpha shape parameter allows catch curve concavity convexity","code":""},{"path":"/reference/WeibullMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull inactivation modified model Mafart — WeibullMM","text":"object nls class fitted parameters model","code":""},{"path":"/reference/WeibullMM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weibull inactivation modified model Mafart — WeibullMM","text":"model's inputs : t: time, assuming time zero beginning experiment. Y(t): bacterial concentration ($Y(t)$) measured time t. Users make sure use base 10 logarithm bacterial concentration (Y(t)) input.","code":""},{"path":"/reference/WeibullMM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weibull inactivation modified model Mafart — WeibullMM","text":"Albert , Mafart P (2005). “modified Weibull model bacterial inactivation.” International Journal Food Microbiology, 100, 197-211.","code":""},{"path":"/reference/WeibullMM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weibull inactivation modified model Mafart — WeibullMM","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/WeibullMM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weibull inactivation modified model Mafart — WeibullMM","text":"","code":"library(gslnls) data(bixina)"},{"path":"/reference/WeibullPH.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull inactivation model Peleg and Huang — WeibullPH","title":"Weibull inactivation model Peleg and Huang — WeibullPH","text":"WeibullPH inactivation model microbial inactivation curve. Returns model parameters estimated according data collected microbial inactivation experiments.","code":""},{"path":"/reference/WeibullPH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull inactivation model Peleg and Huang — WeibullPH","text":"","code":"WeibullPH(t, Y0, k, alpha)"},{"path":"/reference/WeibullPH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull inactivation model Peleg and Huang — WeibullPH","text":"t numeric vector indicating time experiment Y0 base 10 logarithm initial (time=0) bacterial concentration k inactivation rate () alpha ???","code":""},{"path":"/reference/WeibullPH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull inactivation model Peleg and Huang — WeibullPH","text":"object nls class fitted parameters model","code":""},{"path":"/reference/WeibullPH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weibull inactivation model Peleg and Huang — WeibullPH","text":"model's inputs : t: time, assuming time zero beginning experiment. Y(t): base 10 logarithm bacterial concentration X(t) measured time t. Users make sure bacterial concentration input entered base 10 logarithm, Y(t) = log10(X(t)). following parameters can estimated using Weibull function: t: heating time constant temperature Y0: initial (time=0) bacterial counts base 10 logarithm initial bacterial counts; k: inactivation rate (log cfu/s log cfu/min, log cfu/h) alpha: ????","code":""},{"path":"/reference/WeibullPH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weibull inactivation model Peleg and Huang — WeibullPH","text":"Huang L (2009). “Thermal inactivation Listeria monocytogenes ground beef isothermal dynamic temperature conditions.” Journal Food Engineering, 90(3), 380-387. ISSN 0260-8774, doi:10.1016/j.jfoodeng.2008.07.011 , https://www.sciencedirect.com/science/article/pii/S0260877408003439.","code":""},{"path":"/reference/WeibullPH.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weibull inactivation model Peleg and Huang — WeibullPH","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/WeibullPH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weibull inactivation model Peleg and Huang — WeibullPH","text":"","code":"library(gslnls) data(bixina) initial_values = list(Y0=6.0, k=1.0, alpha=0.2) fit <- gsl_nls(lnN ~ WeibullPH(Time, Y0, k, alpha),            data=bixina,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ WeibullPH(Time, Y0, k, alpha) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0    5.533409   0.038942  142.09  < 2e-16 *** #> k     0.005061   0.001763    2.87   0.0117 *   #> alpha 2.395348   0.131615   18.20 1.23e-11 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.09671 on 15 degrees of freedom #>  #> Number of iterations to convergence: 23  #> Achieved convergence tolerance: 2.528e-13 #>   plot(lnN ~ Time, data=bixina) lines(bixina$Time, predict(fit), col=\"blue\")"},{"path":"/reference/ZwieteringFM.html","id":null,"dir":"Reference","previous_headings":"","what":"Zwietering full growth model — ZwieteringFM","title":"Zwietering full growth model — ZwieteringFM","text":"ZwieteringFM function fit Zwietering full growth model complete microbial growth curve. Returns model parameters estimated according data collected microbial growth experiments.","code":""},{"path":"/reference/ZwieteringFM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zwietering full growth model — ZwieteringFM","text":"","code":"ZwieteringFM(t, Y0, Ymax, MUmax, lag)"},{"path":"/reference/ZwieteringFM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zwietering full growth model — ZwieteringFM","text":"t numeric vector indicating time experiment Y0 natural logarithm initial microbial concentration (ln(N0)) time=0 Ymax natural logarithm maximum concentration (ln(Nmax)) reached microorganism MUmax maximum specific growth rate given time units lag duration lag phase time units","code":""},{"path":"/reference/ZwieteringFM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zwietering full growth model — ZwieteringFM","text":"object nls class","code":""},{"path":"/reference/ZwieteringFM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zwietering full growth model — ZwieteringFM","text":"Model's inputs : t: time, assuming time zero beginning experiment. Y(t): natural logarithm microbial concentration (ln(N(t)) measured time t. Users make sure microbial concentration input entered natural logarithm, Y(t) = ln(X(t)).","code":""},{"path":"/reference/ZwieteringFM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Zwietering full growth model — ZwieteringFM","text":"Zwietering MH, Jongenburger , Rombouts FM, van't Riet K (1990). “Modeling Bacterial Growth Curve.” Applied Environmental Microbiology, 56(6), 1875-1881. ISSN 0099-2240, https://aem.asm.org/content/56/6/1875.","code":""},{"path":"/reference/ZwieteringFM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Zwietering full growth model — ZwieteringFM","text":"Vasco Cadavez vcadavez@ipb.pt Ursula Gonzales-Barron ubarron@ipb.pt","code":""},{"path":"/reference/ZwieteringFM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zwietering full growth model — ZwieteringFM","text":"","code":"## Example: Zwietering full model library(gslnls) data(growthfull)  # simulated data set. initial_values = list(Y0=0, Ymax=22, MUmax=1.7, lag=5) # define the initial values fit <- gsl_nls(lnN ~ ZwieteringFM(Time, Y0, Ymax, MUmax, lag),            data=growthfull,            start =  initial_values) summary(fit) #>  #> Formula: lnN ~ ZwieteringFM(Time, Y0, Ymax, MUmax, lag) #>  #> Parameters: #>       Estimate Std. Error t value Pr(>|t|)     #> Y0     0.01863    0.47551   0.039     0.97     #> Ymax  22.14679    0.60152  36.818 3.99e-11 *** #> MUmax  2.29185    0.18848  12.160 6.88e-07 *** #> lag    5.85464    0.48451  12.084 7.26e-07 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.7826 on 9 degrees of freedom #>  #> Number of iterations to convergence: 7  #> Achieved convergence tolerance: 9.199e-11 #>"},{"path":"/reference/aw.html","id":null,"dir":"Reference","previous_headings":"","what":"Data of aw — aw","title":"Data of aw — aw","text":"dataset containing ???","code":""},{"path":"/reference/aw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data of aw — aw","text":"","code":"data(aw)"},{"path":"/reference/aw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of aw — aw","text":"data frame 9 rows 2 variables: aw Water activity sqrtGR Square root growth rate GR Growth rate","code":""},{"path":"/reference/bixina.html","id":null,"dir":"Reference","previous_headings":"","what":"Data of microbial inactivation — bixina","title":"Data of microbial inactivation — bixina","text":"dataset containing","code":""},{"path":"/reference/bixina.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data of microbial inactivation — bixina","text":"","code":"data(bixina)"},{"path":"/reference/bixina.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of microbial inactivation — bixina","text":"data frame 10 rows 3 variables. Time Time minutes Rep Repetition lnN Number microrganism ln scale","code":""},{"path":"/reference/growthfull.html","id":null,"dir":"Reference","previous_headings":"","what":"Data of a complete curve of microbial growth — growthfull","title":"Data of a complete curve of microbial growth — growthfull","text":"dataset containing simulated data full growth model","code":""},{"path":"/reference/growthfull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data of a complete curve of microbial growth — growthfull","text":"","code":"data(growthfull)"},{"path":"/reference/growthfull.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of a complete curve of microbial growth — growthfull","text":"data frame 10 rows 3 variables. Time Time minutes logN Number microrganism log10 scale lnN Number microrganism ln scale","code":""},{"path":"/reference/growthnolag.html","id":null,"dir":"Reference","previous_headings":"","what":"Data of a no lag curve of microbial growth — growthnolag","title":"Data of a no lag curve of microbial growth — growthnolag","text":"dataset containing simulated data lag growth model","code":""},{"path":"/reference/growthnolag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data of a no lag curve of microbial growth — growthnolag","text":"","code":"data(growthnolag)"},{"path":"/reference/growthnolag.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of a no lag curve of microbial growth — growthnolag","text":"object class data.frame 10 rows 3 columns.","code":""},{"path":"/reference/growthnolag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data of a no lag curve of microbial growth — growthnolag","text":"#' @format data frame 10 rows 3 variables. Time Time minutes logN Number microrganism log10 scale lnN Number microrganism ln scale","code":""},{"path":"/reference/growthred.html","id":null,"dir":"Reference","previous_headings":"","what":"Data of a reduced curve of microbial growth — growthred","title":"Data of a reduced curve of microbial growth — growthred","text":"dataset containing simulated data reduced growth model","code":""},{"path":"/reference/growthred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data of a reduced curve of microbial growth — growthred","text":"","code":"data(growthred)"},{"path":"/reference/growthred.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of a reduced curve of microbial growth — growthred","text":"data frame 10 rows 3 variables. Time Time minutes logN Number microrganism log10 scale lnN Number microrganism ln scale","code":""},{"path":"/reference/inh.html","id":null,"dir":"Reference","previous_headings":"","what":"Data of INH antimicrobials — inh","title":"Data of INH antimicrobials — inh","text":"dataset containing ???","code":""},{"path":"/reference/inh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data of INH antimicrobials — inh","text":"","code":"data(inh)"},{"path":"/reference/inh.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of INH antimicrobials — inh","text":"data frame 8 rows 2 variables. Conce Antimicrobial concentration sqrtGR Square root growth rate GR Growth rate","code":""},{"path":"/reference/mafart2005Li11.html","id":null,"dir":"Reference","previous_headings":"","what":"Data of microbial inactivation Albert and Mafart (2005) — mafart2005Li11","title":"Data of microbial inactivation Albert and Mafart (2005) — mafart2005Li11","text":"dataset containing","code":""},{"path":"/reference/mafart2005Li11.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data of microbial inactivation Albert and Mafart (2005) — mafart2005Li11","text":"","code":"data(mafart2005Li11)"},{"path":"/reference/mafart2005Li11.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data of microbial inactivation Albert and Mafart (2005) — mafart2005Li11","text":"data frame 10 rows 3 variables. Time Time logN Number microrganism log10 scale","code":""},{"path":"/reference/ph.html","id":null,"dir":"Reference","previous_headings":"","what":"Data pH — ph","title":"Data pH — ph","text":"dataset containing ???","code":""},{"path":"/reference/ph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data pH — ph","text":"","code":"data(ph)"},{"path":"/reference/ph.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data pH — ph","text":"data frame 14 rows 2 variables. pH pH food sqrtGR Square root growth rate GR Growth rate","code":""},{"path":"/reference/predmicror-package.html","id":null,"dir":"Reference","previous_headings":"","what":"predmicror: predmicror: Fitting predictive microbiology models in r — predmicror-package","title":"predmicror: predmicror: Fitting predictive microbiology models in r — predmicror-package","text":"package fitting predictive microbiology models experimental data.","code":""},{"path":[]},{"path":"/reference/predmicror-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"predmicror: predmicror: Fitting predictive microbiology models in r — predmicror-package","text":"Maintainer: Vasco Cadavez vcadavez@ipb.pt (ORCID) Authors: Ursula Gonzales-Barron ubarron@ipb.pt (ORCID)","code":""},{"path":"/reference/salmonella.html","id":null,"dir":"Reference","previous_headings":"","what":"Potential growth of Salmonella typhimurium on cooked chicken — salmonella","title":"Potential growth of Salmonella typhimurium on cooked chicken — salmonella","text":"dataset containing specific growth rate Salmonela typhimurium cooked chicken","code":""},{"path":"/reference/salmonella.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Potential growth of Salmonella typhimurium on cooked chicken — salmonella","text":"","code":"data(salmonella)"},{"path":"/reference/salmonella.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Potential growth of Salmonella typhimurium on cooked chicken — salmonella","text":"data frame 22 rows 3 variables: Temp Temperature (ºC) GR Specific growth rate (log10/h) sqrtGR Square root specific growth rate (GR)","code":""},{"path":"/reference/salmonella.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Potential growth of Salmonella typhimurium on cooked chicken — salmonella","text":"Oscar TP (2002). “Development validation tertiary simulation model predicting potential growth Salmonella typhimurium cooked chicken.” International Journal Food Microbiology, 76(3), 177-190. ISSN 0168-1605, doi:10.1016/S0168-1605(02)00025-9 , https://www.sciencedirect.com/science/article/pii/S0168160502000259.","code":""},{"path":"/news/index.html","id":"predmicror-101","dir":"Changelog","previous_headings":"","what":"predmicror 1.0.1","title":"predmicror 1.0.1","text":"Release update Inactivation models included","code":""},{"path":"/news/index.html","id":"predmicror-100","dir":"Changelog","previous_headings":"","what":"predmicror 1.0.0","title":"predmicror 1.0.0","text":"First release predmicror Primary growth models","code":""}]
